openapi: 3.0.3
info:
  version: "1.0.0 "
  title: "Wallet API"
servers:
    - url: "http://wallet.com"
paths:
  /accounts:
    get:
      summary: "List all accounts"
      responses:
        200:
          description: "The list of all accounts"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: "Create a new account"
      responses:
        200:
          description: "Account created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'

  /accounts/{accountId}:
    put:
      summary: "Update account details by ID"
      parameters:
        - name: "accountId"
          in: "path"
          required: true
          type: "integer"
        - name: "account"
          in: "body"
          required: true
          schema:
            $ref: "#/components/schemas/Account"
      responses:
        200:
          description: "Account updated successfully"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
  /transactions:
    get:
      summary: "List all transactions"
      responses:
        200:
          description: "The list of all transactions"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: "Create a new transaction"
      responses:
        200:
          description: "Transaction created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'


  /transactions/{transactionId}:
    put:
      summary: "Update transaction details by ID"
      parameters:
        - name: "transactionId"
          in: "path"
          required: true
          type: "integer"
        - name: "transaction"
          in: "body"
          required: true
          schema:
            $ref: "#/components/schemas/Transaction"
      responses:
        200:
          description: "Transactions updated successfully"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Transaction'
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
  /currencies:
    get:
      summary: "List all currencies"
      responses:
        200:
          description: "The list of all currencies"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: "Create a new currency"
      responses:
        200:
          description: "Currency created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Currency"
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
components:
  responses:
    400:
      description: "Bad Request"
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
          example:
            type: BadRequestException
            message: "Bad request"
    403:
      description: "Forbidden"
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
          example:
            type: NotAuthorizedException
            message: "Not authorized"
    500:
      description: "Internal server error"
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
          example:
            type: BadRequestException
            message: "Bad request"
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
        accountName:
          type: string
        currencyId:
          $ref: "#/components/schemas/Currency"
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
    Currency:
      type: object
      properties:
        id:
          type: integer
        currencyName:
          type: string
        symbol:
          type: string
    Transaction:
      type: object
      properties:
        id:
          type: integer
        value:
          type: double
        description:
          type: string
        accountId:
          $ref: "#/components/schemas/Account"
        type:
          type: string
        transactionDate:
          type: date
